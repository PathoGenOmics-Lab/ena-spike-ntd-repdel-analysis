from pathlib import Path
import pandas as pd


SEARCH_DF = None


def build_targets(wildcards, template: str):
    global SEARCH_DF
    if SEARCH_DF is None:
        SEARCH_DF = pd.read_csv(
            checkpoints.search_ena.get(**wildcards).output.table,
            sep="\t",
            usecols=["instrument_platform", "study_accession", "sample_accession", "run_accession", "library_layout", "library_strategy"]
        )
    return [
        template.format(platform=platform, study=study, sample=sample, run=run, layout=layout, strategy=strategy) \
        for (platform, study, sample, run, layout, strategy), _ in SEARCH_DF.groupby(["instrument_platform", "study_accession", "sample_accession", "run_accession", "library_layout", "library_strategy"])
    ]


rule all:
    input:
        "output/ena/search.tsv",
        "output/ena/report/search/summary.pdf",
        lambda w: build_targets(w, "output/preproc/multiqc/{study}"),
        lambda w: build_targets(w, "output/mappings/sorted_bam/{study}/{sample}/{platform}/{run}/{layout}_{strategy}/sample.sorted.bam")


rule efetch_fasta_reference:
    params:
        accession = "NC_045512.2"
    output:
        fasta = "output/reference.fasta"
    shell: 'curl -s -o {output.fasta:q} "https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id={params.accession}&rettype=fasta"'


include: "rules/ena.smk"
include: "rules/preproc.smk"
include: "rules/mapping.smk"
